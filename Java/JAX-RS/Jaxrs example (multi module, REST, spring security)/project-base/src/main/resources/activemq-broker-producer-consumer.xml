<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:amq="http://activemq.apache.org/schema/core" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd">


	<amq:broker brokerName="${activemq.brokerName}"
		dataDirectory="${activemq.base}/data" persistent="true" useJmx="true">

		<amq:persistenceAdapter>
			<amq:kahaDB directory="${activemq.base}/data" />
		</amq:persistenceAdapter>

		<amq:transportConnectors>
			<amq:transportConnector uri="${activemq.transportURI.vm}" />
		</amq:transportConnectors>

		<amq:managementContext>
			<amq:managementContext connectorPort="2011" />
		</amq:managementContext>

		<amq:systemUsage>
			<amq:systemUsage>
				<amq:memoryUsage>
					<amq:memoryUsage limit="512mb" />
				</amq:memoryUsage>
				<amq:storeUsage>
					<amq:storeUsage limit="10gb" />
				</amq:storeUsage>
				<amq:tempUsage>
					<amq:tempUsage limit="1gb" />
				</amq:tempUsage>
			</amq:systemUsage>
		</amq:systemUsage>


		<amq:destinationPolicy>
			<amq:policyMap>
				<amq:policyEntries>
					<!-- Set the following policy on all queues using the '>' wildcard -->
					<amq:policyEntry queue=">">
						<amq:deadLetterStrategy>
							<!-- Use the prefix 'DLQ.' for the destination name, and make the 
								DLQ a queue rather than a topic -->
							<amq:individualDeadLetterStrategy
								queuePrefix="DLQ." useQueueForQueueMessages="true" />
						</amq:deadLetterStrategy>
					</amq:policyEntry>
				</amq:policyEntries>
			</amq:policyMap>
		</amq:destinationPolicy>


	</amq:broker>


	<!-- "depends-on" attribute required when using bare bean; ensures the ActiveMQ 
		connection factory is created after the co-located ActiveMQ broker. This 
		is important, because otherwise the vm: transport would try to instantiate 
		a default broker to connect to. For extra security, the "create=false" flag 
		is set on the URL to prevent this from happening. -->
	<amq:connectionFactory id="amqProducerConnectionFactory"
		brokerURL="${activemq.transportURI.vm}?create=false" />

	<amq:connectionFactory id="amqConsumerConnectionFactory"
		brokerURL="${activemq.transportURI.vm}?create=false">
		<!-- redeliveryPolicyMap allows for setting RedeliveryPolicy per Destination 
			from ActiveMQ v5.7.0 -->
		<amq:redeliveryPolicyMap>
			<amq:redeliveryPolicyMap>

				<amq:defaultEntry>
					<!-- default policy, 1 time with 15s delay -->
					<amq:redeliveryPolicy maximumRedeliveries="1"
						initialRedeliveryDelay="15000" />
				</amq:defaultEntry>

			</amq:redeliveryPolicyMap>
		</amq:redeliveryPolicyMap>

	</amq:connectionFactory>


	<!-- *************************************************destinations************************************************** -->
	<amq:queue id="queueUserRegistration" physicalName="${activemq.queue.user.registration}" />


	<!-- ****************************************************Producers JMS Templates********************************************* -->
	<!-- A cached connection to wrap the ActiveMQ connection -->
	<bean id="cachedConnectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory"
		p:targetConnectionFactory-ref="amqProducerConnectionFactory"
		p:sessionCacheSize="70" />

	<!-- component scanning for producers -->
	<context:component-scan base-package="com.maven.project.message.producer" />

	<!-- A JmsTemplate instance that uses the cached connection and destination 
		as queueUserRegistration i.e JmsTemplate by default to write on "queueUserRegistration" -->
	<bean id="queueUserRegistrationTemplate" class="org.springframework.jms.core.JmsTemplate"
		p:connectionFactory-ref="cachedConnectionFactory"
		p:defaultDestination-ref="queueUserRegistration" p:explicitQosEnabled="true"
		p:pubSubDomain="false" />


	<!-- **************************************************Consumers DMLC's******************************************************** -->
	<bean id="singleConnectionFactory"
		class="org.springframework.jms.connection.SingleConnectionFactory"
		p:targetConnectionFactory-ref="amqConsumerConnectionFactory" />

	<!-- component scans for consumers who depends on integration layer -->
	<context:component-scan base-package="com.maven.project.consumer" />

	<bean id="userActivationDMLC"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer"
		p:connectionFactory-ref="singleConnectionFactory" p:destination-ref="queueUserRegistration"
		p:messageListener-ref="userActivationML" p:concurrentConsumers="10"
		p:maxConcurrentConsumers="30" p:receiveTimeout="3000"
		p:idleTaskExecutionLimit="10" p:idleConsumerLimit="5" p:pubSubDomain="false"
		p:sessionTransacted="true" p:errorHandler-ref="userActivationListenerErrorHandler"
		p:messageSelector="REG_MSG_TYPE='REG_MSG_ACTIVATION'" />
	<bean name="userActivationML"
		class="com.maven.project.consumer.mdp.registration.UserActivationListener" />
	<bean name="userActivationListenerErrorHandler"
		class="com.maven.project.consumer.errorhandler.UserActivationListenerErrorHandler" />

</beans>
